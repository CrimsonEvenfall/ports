# description	: WebRTC library for Telegram-desktop
# homepage	: https://github.com/desktop-app/tg_owt
# depends	: cmake ninja pipewire pulseaudio libjpeg-turbo libxcomposite

name=tg_owt
version=0.0.0.20210627
_commit=91d836dc84a16584c6ac52b36c04c0de504d9c34
_libyuv_commit=ad890067f661dc747a975bc55ba3767fe30d4452
_libvpx_commit=5b63f0f821e94f8072eb483014cfc33b05978bb9
release=1
noextract="libvpx-${_libvpx_commit}.tar.gz
	libyuv-${_libyuv_commit}.tar.gz"
source="$name-$version.tar.gz::https://github.com/desktop-app/tg_owt/archive/${_commit}.tar.gz
	libvpx-${_libvpx_commit}.tar.gz::https://chromium.googlesource.com/webm/libvpx/+archive/${_libvpx_commit}.tar.gz
	libyuv-${_libyuv_commit}.tar.gz::https://chromium.googlesource.com/libyuv/libyuv/+archive/${_libyuv_commit}.tar.gz"

build() {
	cd $name-$_commit

	bsdtar xzf $SRC/libyuv-${_libyuv_commit}.tar.gz -C src/third_party/libyuv
	bsdtar xzf $SRC/libvpx-${_libvpx_commit}.tar.gz -C src/third_party/libvpx/source/libvpx
	
	mkdir build
	cd build
	# path to openssl include is intentionally wrong, so that it will not mess up srtp include headers
	cmake -G Ninja \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DTG_OWT_SPECIAL_TARGET=linux \
		-DTG_OWT_LIBJPEG_INCLUDE_PATH=/usr/include \
		-DTG_OWT_OPENSSL_INCLUDE_PATH=/usr/include \
		-DTG_OWT_OPUS_INCLUDE_PATH=/usr/include/opus \
		-DTG_OWT_FFMPEG_INCLUDE_PATH=/usr/include \
		-DTG_OWT_DLOPEN_PIPEWIRE=OFF \
		-DBUILD_SHARED_LIBS=OFF \
		..
	ninja
	DESTDIR=$PKG ninja install
}
